import proguard.gradle.ProGuardTask
import java.nio.file.Paths
import java.lang.String;

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.guardsquare:proguard-gradle:7.1.0'
    }
}

plugins {
    id 'dk.sebsa.java-application-conventions'
}

dependencies {
    implementation 'org.apache.commons:commons-text'
    implementation project(':coal')
}

application {
    // Define the main class for the application.
    mainClass = 'dk.sebsa.sandbox.Sandbox'
}

// Proguyard Shirnk And Obfuscate
def jarNameWithoutExtension = jar.archiveName.with { it.take(it.lastIndexOf(".")) }
def obfuscatedJarName = "${jarNameWithoutExtension}-release.jar"
def obfuscatedJarName2 = "${jarNameWithoutExtension}.jar"
def jarFileLocation = jar.archivePath.parent
def obfuscatedFilePath = Paths.get(jarFileLocation, obfuscatedJarName)
def obfuscatedFilePath2 = Paths.get(jarFileLocation, obfuscatedJarName2)

task doProguard(type: ProGuardTask) {
    dependsOn(findProject(":coal").tasks.getByName("jar"))

    injars Paths.get(jarFileLocation, "$jarNameWithoutExtension-original.jar").toString()
    outjars obfuscatedFilePath2.toString()
    libraryjars configurations.findByName('runtimeClasspath').getFiles()
    libraryjars "${System.getProperty('java.home')}/jmods/java.base.jmod"
    ignorewarnings()

    // PROGUARD.txt
    optimizationpasses 3
    allowaccessmodification()
    overloadaggressively()
    repackageclasses ''

    keep 'public class dk.sebsa.sandbox.Sandbox {  \
    public static void main(java.lang.String[]);  \
    }'
}

task renameJar(type: DefaultTask) {
    //dependsOn(project.tasks.doProguard)
    jar.archivePath.renameTo(Paths.get(jarFileLocation, "$jarNameWithoutExtension-original.jar").toFile())
    //obfuscatedFilePath.toFile().renameTo(Paths.get(jarFileLocation, "$jarNameWithoutExtension.jar").toFile())
}
project.tasks.distZip.getDependsOn().add(doProguard)
project.tasks.renameJar.finalizedBy(doProguard)
jar.finalizedBy(project.tasks.renameJar)
//jar.finalizedBy(project.tasks.renameJar)